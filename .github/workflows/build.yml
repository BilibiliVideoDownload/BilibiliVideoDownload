# main.yml

# Workflow's name
name: Build Electron App For Windows/macOs/Ubuntu

# Workflow's trigger
on:
  push:
    tags:
      - "v*.*.*"

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, 'ubuntu-latest']

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v3

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # step3: pnpm install
      - name: pnpm install
        run: |
          pnpm install

      # step4: build app for mac/win/linux
      - name: Build windows app
        if: matrix.os == 'windows-latest'
        run: |
          pnpm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build mac app
        if: matrix.os == 'macos-latest'
        run: |
          pnpm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ubuntu app
        if: matrix.os == 'ubuntu-latest'
        run: |
          pnpm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step5: cleanup artifacts in dist_electron
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          pnpm dlx rimraf "dist_electron/!(*.exe)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          pnpm dlx rimraf "dist_electron/!(*.dmg)"

      - name: cleanup artifacts for ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          pnpm dlx rimraf "dist_electron/!(*.AppImage)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: dist_electron

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          files: "dist_electron/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}